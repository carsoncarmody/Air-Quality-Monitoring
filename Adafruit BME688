import adafruit_bme680
import time
import board

# Create sensor object, communicating over the board's default I2C bus
i2c = board.I2C()   # uses board.SCL and board.SDA
bme680 = adafruit_bme680.Adafruit_BME680_I2C(i2c)

# change this to match the location's pressure (hPa) at sea level
bme680.sea_level_pressure = 1013.25

from Adafruit_IO import Client, Feed
ADAFRUIT_IO_KEY = 'aio_mBHp06rMV9hkCRW8d2SIKlBdAP5N'
ADAFRUIT_IO_USERNAME = 'Ccarmo'
aio = Client(ADAFRUIT_IO_USERNAME, ADAFRUIT_IO_KEY)

gas_feed = aio.feeds('gas')
pressure_feed = aio.feeds('pressure')
altitude_feed = aio.feeds('altitude')

while True:
    print("\nTemperature: %0.1f C" % bme680.temperature)
    print("gas: %d ohm" % bme680.gas)
    print("humidity: %0.1f %%" % bme680.relative_humidity)
    print("pressure: %0.3f hPa" % bme680.pressure)
    print("altitude = %0.2f meters" % bme680.altitude)

    gas = bme680.gas
    pressure = bme680.pressure
    altitude = bme680.altitude

    print('gas={0:0.1f}*C pressure={1:0.1f}% altitude={2:0.1f}PPM'.format(gas, pressure, altitude))

    gas = '%.2f'%(gas)
    pressure = '%.2f'%(pressure)
    altitude = '%.2f'%(altitude)
    aio.send_data(gas_feed.key, str(gas))
    aio.send_data(pressure_feed.key, str(pressure))
    aio.send_data(altitude_feed.key, str(altitude))
    time.sleep(15)

else:
    print('Failed to get BME680 Reading, trying again') # ', 5. 'seconds')





BACKUP CODE:

import adafruit_bme680
import time
import board

# Create sensor object, communicating over the board's default I2C bus
i2c = board.I2C()   # uses board.SCL and board.SDA
bme680 = adafruit_bme680.Adafruit_BME680_I2C(i2c)

# change this to match the location's pressure (hPa) at sea level
bme680.sea_level_pressure = 1013.25

from Adafruit_IO import Client, Feed
ADAFRUIT_IO_KEY = 'aio_mBHp06rMV9hkCRW8d2SIKlBdAP5N'
ADAFRUIT_IO_USERNAME = 'Ccarmo'
aio = Client(ADAFRUIT_IO_USERNAME, ADAFRUIT_IO_KEY)

gas_feed = aio.feeds('gas')
pressure_feed = aio.feeds('pressure')
altitude_feed = aio.feeds('altitude')

while True:
    print("\nTemperature: %0.1f C" % bme680.temperature)
    print("gas: %d ohm" % bme680.gas)
    print("humidity: %0.1f %%" % bme680.relative_humidity)
    print("pressure: %0.3f hPa" % bme680.pressure)
    print("altitude = %0.2f meters" % bme680.altitude)

    gas = bme680.gas
    pressure = bme680.pressure
    altitude = bme680.altitude

    print('gas={0:0.1f}*C pressure={1:0.1f}% altitude={2:0.1f}PPM'.format(gas, pressure, altitude))

    gas = '%.2f'%(gas)
    pressure = '%.2f'%(pressure)
    altitude = '%.2f'%(altitude)
    aio.send_data(gas_feed.key, str(gas))
    aio.send_data(pressure_feed.key, str(pressure))
    aio.send_data(altitude_feed.key, str(altitude))
    time.sleep(60)

else:
    print('Failed to get BME680 Reading, trying again') # ', 5. 'seconds')
